{
  "name": "TriTimeTracker",
  "tagline": "fall2016-project-jakep11 created by GitHub Classroom",
  "body": "### Purpose.\r\nThe TriTimeTracker is a web application that serves to track previous Triathlon times, provide statistics, and estimate future triathlons. The web app allows for the creation of multiple user accounts and will store each individuals data. This project was created as a class project for CPE 305 Individual Software Design and Development at Cal Poly San Luis Obispo.\r\n\r\n### Walk Through\r\n![](http://i.imgur.com/KSYzu1s.jpg)\r\n![](http://i.imgur.com/rcs9DQ1.jpg)\r\n![](http://i.imgur.com/vqsbuFz.jpg)\r\n![](http://i.imgur.com/XXnhamd.jpg)\r\n![](http://i.imgur.com/1TBJ1sT.jpg)\r\n![](http://i.imgur.com/1LetnFO.jpg)\r\n\r\n### Architecture\r\nThe software uses a Service-Oriented architecture as pictured below.\r\n\r\n### Technologies/Tools Used\r\nTechnologies/languages:\r\n* Java 8\r\n* Spring Framework\r\n* AngularJS\r\n* Bootstrap\r\n\r\nTools:\r\n* Eclipse\r\n* Maven\r\n* Sonarqube\r\n* Travis CI\r\n* Checkstyle (Google Style Guide for Java)\r\n* GitHub (obviously if you are reading this)\r\n\r\n### Design Patterns\r\n\r\n\r\n### What I liked about my design\r\n1. Completely Decoupled REST API and GUI\r\n    * Backend can be extended to a mobile application instead of website\r\n\r\n### Key Takeaways \r\n1. Java Spring Framework is a pain. There is a ton of \"convention over configuration\" that makes it easy to do a ton of \"magic\" with little code but makes extension from the default, very difficult.\r\n\r\n\r\n\r\n\r\n### Support or Contact\r\nHaving trouble with TriTimeTracker? Check out the [project](https://help.github.com/pages) or [contact support](mailto:jjpicket@calpoly.edu) and weâ€™ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}